:root {
  --font-primary: "Syne";
  --font-secondary: "";
}

.xxl {
  margin-bottom: .5em;
  font-size: 80px;
  font-weight: 700;
  line-height: .85;
  color: var(--color-heading)
}

.xl {
  margin-bottom: .5em;
  font-size: 70px;
  font-weight: 700;
  line-height: .85;
  color: var(--color-heading)
}

h1, .h1 {
    margin-bottom: .3em;
    font-size: 50px;
    font-weight: 700;
    line-height: .85;
    color: var(--color-heading)
  }
  
h2, .h2 {
  margin-bottom: .5em;
  font-size: 40px;
  font-weight: 700;
  line-height: 1;
  color: var(--color-heading)
}

h3, .h3 {
  margin-bottom: .3em;
  font-size: 32px;
  font-weight: 700;
  line-height: .85;
  color: var(--color-heading)
}

h4, .h4 {
margin-bottom: .5em;
font-size: 28px;
font-weight: 700;
line-height: 1;
color: var(--color-heading)
}

p, .paragraph {
  margin-bottom: 2em;
  font-size: 18px;
  line-height: 1.8;
  color: var(--color-text)
}

blockquote {
  margin-left: 0;
  padding-left: 2em;
  border-left: 5px solid var(--color-accent-1)
}


  /* Recommended styles for Splitting */
  .splitting .word,
  .splitting .char {
    display: inline-block;
  }
  
  /* Psuedo-element chars */
  .splitting .char {
    position: relative;
  }
  
  /**
   * Populate the psuedo elements with the character to allow for expanded effects
   * Set to `display: none` by default; just add `display: block` when you want
   * to use the psuedo elements
   */
  .splitting .char::before,
  .splitting .char::after {
    content: attr(data-char);
    position: absolute;
    top: 0;
    left: 0;
    visibility: hidden;
    transition: inherit;
    user-select: none;
  }
  
  /* Expanded CSS Variables */
  
  .splitting {
    /* The center word index */
    --word-center: calc((var(--word-total) - 1) / 2);
  
    /* The center character index */
    --char-center: calc((var(--char-total) - 1) / 2);
  
    /* The center character index */
    --line-center: calc((var(--line-total) - 1) / 2);
  }
  
  .splitting .word {
    /* Pecent (0-1) of the word's position */
    --word-percent: calc(var(--word-index) / var(--word-total));
    /* Pecent (0-1) of the line's position */
    --line-percent: calc(var(--line-index) / var(--line-total));
    overflow: hidden;
  }
  
  .splitting .char {
    /* Percent (0-1) of the char's position */
    --char-percent: calc(var(--char-index) / var(--char-total));
  
    /* Offset from center, positive & negative */
    --char-offset: calc(var(--char-index) - var(--char-center));
  
    /* Absolute distance from center, only positive */
    --distance: calc(
       (var(--char-offset) * var(--char-offset)) / var(--char-center)
    );
  
    /* Distance from center where -1 is the far left, 0 is center, 1 is far right */
    --distance-sine: calc(var(--char-offset) / var(--char-center));
  
    /* Distance from center where 1 is far left/far right, 0 is center */
    --distance-percent: calc((var(--distance) / var(--char-center)));
  }
  